#!/usr/bin/make -f
# -*- makefile -*-

srcpkg = $(shell LC_ALL=C dpkg-parsechangelog | grep '^Source:' | cut -d ' ' -f 2,2)
debver = $(shell LC_ALL=C dpkg-parsechangelog | grep '^Version:' | cut -d ' ' -f 2,2 )
upstreamver = $(shell echo $(debver) | cut -d '-' -f 1,1 )

PYTHONS := $(shell pyversions -vr)

# this figures out the last merge point from 'master' into the Debian branch and
# then described this commit relative to the last release tag
# If this should make any sense the local master branch must track upstream's
# master or whatever other source branch.
gitver = $(shell [ -x /usr/bin/git ] && git describe --tags --match '*\.*\.*' $$(git merge-base -a HEAD master) | sed -e 's/_/./g' -e 's/-/+git/')


# one ring to rule them all ...
%:
	dh $@ --buildsystem=cmake

# this enables everything that upstream considers to be ready for production
# currently tests only get built but do not run as the test suite assumes
# an already installed package -- upstream is working on a fix
CMAKE_FLAGS=-DCMAKE_INSTALL_PREFIX:PATH=/usr \
            -DCMAKE_BUILD_TYPE=Release \
            -DPYTHON_VERSIONS:LIST="$$(pyversions -s | sed -e 's/ /;/g')" \
            -DBUILD_SHARED_LIBS:BOOL=ON \
            -DCMAKE_SHARED_LINKER_FLAGS="-Wl,--no-undefined" \
            -DCMAKE_EXE_LINKER_FLAGS="-Wl,--no-undefined" \
            -DISIS_RUNTIME_LOG:BOOL=ON \
	    -DISIS_DEBUG_LOG:BOOL=OFF  \
            -DISIS_PYTHON_MUPARSER_SUPPORT:BOOL=ON \
            -DGIT_REVISION="Debian-$(debver)"

override_dh_auto_test:
	# don't work ATM


override_dh_auto_configure:
	dh_auto_configure -- $(CMAKE_FLAGS)

get-orig-source:
	# orig tarball, turn directory into something nicer
	git archive --format=tar --prefix=$(srcpkg)-$(gitver)/ HEAD | \
		gzip -9 > $(srcpkg)_$(gitver).orig.tar.gz
